// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email        String  @unique
  passwordHash String
  firstName    String?
  lastName     String?

  products Product[]

  @@map("users")
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name         String   @unique
  costPrice    Decimal?
  sellingPrice Decimal?
  quantity     Int

  userId Int
  user   User @relation(fields: [userId], references: [id])

  supplier Supplier[]
  sale     Sale[]
  order    Order[]

  @@map("products")
}

model Supplier {
  id Int @id @default(autoincrement())

  name        String @unique
  contactInfo String

  products Product[]
  orders   Order[]
}

model Sale {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name            String    @unique
  value           Decimal?
  discountedValue Decimal?
  date            DateTime
  products        Product[]
  soldTo          String
}

model Order {
  id Int @id @default(autoincrement())

  name            String    @unique
  value           Decimal?
  discountedValue Decimal?
  date            DateTime
  products        Product[]

  contactId Int
  contact   Contact @relation(fields: [contactId], references: [id])

  supplierId Int
  supplier   Supplier @relation(fields: [supplierId], references: [id])
}

model Contact {
  id          Int     @id @default(autoincrement())
  name        String
  contactInfo String
  order       Order[]
}
